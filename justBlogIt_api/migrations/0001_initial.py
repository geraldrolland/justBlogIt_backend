# Generated by Django 5.0.6 on 2024-09-08 17:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default='', max_length=64)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('bio', models.TextField()),
                ('follower_count', models.IntegerField(default=0)),
                ('following_count', models.IntegerField(default=0)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('post_count', models.IntegerField(default=0)),
                ('profile_image', models.TextField()),
                ('followers', models.ManyToManyField(blank=True, related_name='follow', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(blank=True, related_name='foll', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notificationType', models.CharField(choices=[('follow', 'Follow'), ('unfollow', 'Unfollow'), ('Comment', 'comment'), ('Reply', 'reply'), ('None', 'none'), ('Like', 'like'), ('unlike', 'Unlike')], default='None', max_length=32, unique=True)),
                ('postText', models.TextField(blank=True, null=True)),
                ('commentText', models.TextField(blank=True, null=True)),
                ('postImage', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('createdAt', models.DateField(auto_now_add=True)),
                ('receipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipient', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateField(auto_now_add=True)),
                ('postTitle', models.CharField(max_length=120)),
                ('postText', models.TextField()),
                ('postImage', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('likes', models.IntegerField(default=0)),
                ('commentCount', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('commentId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateField(auto_now_add=True)),
                ('commentText', models.TextField()),
                ('likes', models.IntegerField(default=0)),
                ('replyCount', models.IntegerField(default=0)),
                ('replies', models.ManyToManyField(blank=True, to='justBlogIt_api.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='justBlogIt_api.post')),
            ],
        ),
    ]
